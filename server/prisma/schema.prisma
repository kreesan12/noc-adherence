// server/routes/attendance.js
import { Router } from 'express'

export default prisma => {
  const r = Router()

  // PATCH /api/attendance/:shiftId
  r.patch('/:shiftId', async (req, res, next) => {
    try {
      const shiftId = Number(req.params.shiftId)
      const { status, dutyName, lunchStart, lunchEnd } = req.body

      // 1️⃣ find or create the duty record (if a name was supplied)
      let dutyId = null
      if (dutyName) {
        const duty = await prisma.duty.findUnique({ where: { name: dutyName } })
        if (!duty) {
          return res.status(400).json({ error: `Unknown duty '${dutyName}'` })
        }
        dutyId = duty.id
      }

      // 2️⃣ prepare the common data object
      const data = {
        status,
        dutyId,
        lunchStart: lunchStart ? new Date(lunchStart) : null,
        lunchEnd:   lunchEnd   ? new Date(lunchEnd)   : null,
        updatedBy:  req.user.id
      }

      // 3️⃣ see if an AttendanceLog already exists for this shift
      const existing = await prisma.attendanceLog.findUnique({
        where: { shiftId }
      })

      let saved
      if (existing) {
        // update
        saved = await prisma.attendanceLog.update({
          where: { id: existing.id },
          data
        })
      } else {
        // create
        saved = await prisma.attendanceLog.create({
          data: {
            shiftId,
            ...data
          }
        })
      }

      // 4️⃣ audit & return
      await res.audit('update_attendance','AttendanceLog', saved.id, data)
      res.json(saved)
    } catch (err) {
      next(err)
    }
  })

  return r
}
