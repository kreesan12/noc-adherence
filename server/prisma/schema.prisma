generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- TABLES ----------

model Agent {
  id          Int     @id @default(autoincrement())
  fullName    String
  email       String? @unique
  hash        String?
  phone       String?
  role        String? // NOC-I, NOC-II …
  standbyFlag Boolean @default(false)

  shifts       Shift[]
  auditEntries AuditLog[] @relation("AgentAuditEntries")
}

model Supervisor {
  id       Int    @id @default(autoincrement())
  fullName String
  email    String @unique
  hash     String
  role     String @default("supervisor")

  // all audit‐logs this supervisor has created
  auditLogs AuditLog[] @relation("SupervisorAuditEntries")

  // all attendance updates this supervisor performed
  attendanceLogs AttendanceLog[] @relation("SupervisorAttendance")
}

model Shift {
  id         Int       @id @default(autoincrement())
  agentId    Int?
  agent      Agent?    @relation(fields: [agentId], references: [id])

  shiftDate  DateTime  @db.Date
  startAt    DateTime
  endAt      DateTime

  // one-hour lunch break window
  breakStart DateTime?
  breakEnd   DateTime?

  /// ←-- new column required by Feature 1 & 2
  generatedBy String?  @default("solver")     // 'solver' | 'manual'

  attendance AttendanceLog?
}


model Duty {
  id   Int    @id @default(autoincrement())
  name String @unique

  logs AttendanceLog[]
}

model AttendanceLog {
  id      Int   @id @default(autoincrement())
  shiftId Int   @unique
  shift   Shift @relation(fields: [shiftId], references: [id])

  status        Status    @default(pending)
  checkIn       DateTime?
  lunchStart    DateTime?
  lunchEnd      DateTime?
  overtimeStart DateTime?
  overtimeEnd   DateTime?

  dutyId Int?
  duty   Duty? @relation(fields: [dutyId], references: [id])

  // who last updated this attendance?
  supervisorId Int?
  supervisor   Supervisor? @relation("SupervisorAttendance", fields: [supervisorId], references: [id])
}

model VolumeForecast {
  id              Int @id @default(autoincrement())
  role            String
  date            DateTime @db.Date
  hour            Int // 0–23
  expectedCalls   Int
  expectedTickets Int
}

model VolumeActual {
  id        Int      @id @default(autoincrement())
  role      String
  date      DateTime @db.Date
  hour      Int
  calls     Int
  tickets   Int
}

model AuditLog {
  id      Int    @id @default(autoincrement())
  actorId Int?
  actor   Agent? @relation("AgentAuditEntries", fields: [actorId], references: [id])

  supervisorId Int?
  supervisor   Supervisor? @relation("SupervisorAuditEntries", fields: [supervisorId], references: [id])

  action   String
  table    String
  recordId Int
  delta    Json
  ts       DateTime @default(now())
}

enum Status {
  pending
  present
  late
  no_show
  off_sick
  emergency_leave
  awol
}
